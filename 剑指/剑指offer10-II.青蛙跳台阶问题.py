"""
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

 

示例 1：

输入：n = 2
输出：2
解释：有两种方法可以爬到楼顶。
1. 1 阶 + 1 阶
2. 2 阶
"""

# 思路：设跳上 n 级台阶有 f(n) 种跳法。在所有跳法中，青蛙的最后一步只有两种情况： 跳上 1 级或 2 级台阶；即 f(n)=f(n−1)+f(n−2)
    # 因此，这样可以将思路转化为 求斐波那契数列
    # f(0) = 1, f(1) = 1, f(2) = 2
    
class Solution:
    def climbStairs(self, n: int) -> int:
        if n < 2:
            return 1
        a,b = 1,1
        for _ in range(2, n+1):
            a,b = b,(a+b)
        return b